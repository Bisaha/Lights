<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  stroke: black;
}

.bar2 {
  fill: orange;
}

.bar2:hover {
  stroke: black;
}

.axis {
  font: 14px Arial;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}



    .d3-slider {
      position: relative;
      font-family: Verdana,Arial,sans-serif;
      font-size: 1.1em;
      border: 1px solid #aaaaaa;
      z-index: 2;
    }

    .d3-slider-range {
    background:#2980b9;
      left:0px;
      right:0px;
      height: 0.8em;
      position: absolute;
    }
    .d3-slider-range-vertical {
      background:#2980b9;
      left:0px;
      right:0px;
      position: absolute;
      top:0;
    }

    .d3-slider-horizontal {
      height: .8em;
    }  
    .d3-slider-vertical {
      width: .8em;
      height: 100px;
    } 
    .d3-slider-horizontal .d3-slider-handle {
      top: -.3em;
      margin-left: 0;/*-.6em;*/
    }
    .d3-slider-vertical .d3-slider-handle {
      left: -.25em;
      margin-left: 0;
      margin-bottom: -.6em;      
    }

    .d3-slider-handle {
      position: absolute;
      width: .7em;
      height: 1.2em;
      border: 0;
      border-radius: 4px;
      background: #333;
      /*background: linear-gradient(to bottom, #333 0%, #ddd 100%);*/
      z-index: 3;
    }
    .d3-slider-handle:hover {
      border: 0;
    }

    .d3-slider-axis {
      position: relative;
      z-index: 1;    
    }
    .d3-slider-axis-bottom {
      top: .8em;
    }
    .d3-slider-axis-right {
      left: .8em;
    }
    .d3-slider-axis path {
      stroke-width: 0;
      fill: none;
    }
    .d3-slider-axis line {
      fill: none;
      stroke: #aaa;
      shape-rendering: crispEdges;
    }
    .d3-slider-axis text {
      font-size: 11px;
    }


    #graph{
      width:600px;
      float:left;
    }
    .sliderwrapper {
      margin-top:200px;
      height: 250px;
      width:100px;
      float:left;
    }

    .slider {
      height: 250px;
      width:5px;
    }

    #calculation{
      overflow: auto;
    }
</style>
<body>
  <div id="graph"></div>
  <div class="sliderwrapper"><div class="slider" id="slider1"></div><div class="slider">Electricity Saving</div></div>
  <div class="sliderwrapper"><div class="slider" id="slider2"></div><div class="label">Maintenance Saving</div></div>
  <div class="sliderwrapper"><div class="slider" id="slider3"></div><div class="label">Lifespan of Light</div></div>
  <div class="sliderwrapper"><div class="slider" id="slider4"></div></div>
  <div id="calculation"></div>

<script src="d3.html"></script>
<script src="d3.slider.js"></script>
<script>

var margin = {top: 20, right: 400, bottom: 30, left: 90},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(7,"$");

var svg = d3.select("#graph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  stroke: black;
}

.bar2 {
  fill: orange;
}

.bar2:hover {
  stroke: black;
}

.axis {
  font: 12px Arial;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}



    .d3-slider {
      position: relative;
      font-family: Verdana,Arial,sans-serif;
      font-size: 1.1em;
      border: 1px solid #aaaaaa;
      z-index: 2;
    }

    .d3-slider-range {
    background:#2980b9;
      left:0px;
      right:0px;
      height: 0.8em;
      position: absolute;
    }
    .d3-slider-range-vertical {
      background:#2980b9;
      left:0px;
      right:0px;
      position: absolute;
      top:0;
    }

    .d3-slider-horizontal {
      height: .8em;
    }  
    .d3-slider-vertical {
      width: .8em;
      height: 100px;
    } 
    .d3-slider-horizontal .d3-slider-handle {
      top: -.3em;
      margin-left: 0;/*-.6em;*/
    }
    .d3-slider-vertical .d3-slider-handle {
      left: -.25em;
      margin-left: 0;
      margin-bottom: -.6em;      
    }

    .d3-slider-handle {
      position: absolute;
      width: .7em;
      height: 1.2em;
      border: 0;
      border-radius: 4px;
      background: #333;
      /*background: linear-gradient(to bottom, #333 0%, #ddd 100%);*/
      z-index: 3;
    }
    .d3-slider-handle:hover {
      border: 0;
    }

    .d3-slider-axis {
      position: relative;
      z-index: 1;    
    }
    .d3-slider-axis-bottom {
      top: .8em;
    }
    .d3-slider-axis-right {
      left: .8em;
    }
    .d3-slider-axis path {
      stroke-width: 0;
      fill: none;
    }
    .d3-slider-axis line {
      fill: none;
      stroke: #aaa;
      shape-rendering: crispEdges;
    }
    .d3-slider-axis text {
      font-size: 11px;
    }


    #graph{
      width:600px;
      float:left;
    }
    .sliderwrapper {
      margin-top:200px;
      height: 250px;
      width:100px;
      float:left;
    }

    .slider {
      height: 250px;
      width:5px;
    }

    #calculation{
      overflow: auto;
    }
</style>
<body>
  <div id="graph"></div>
  <div class="sliderwrapper"><div class="slider" id="slider1"></div></div>
  <div class="sliderwrapper"><div class="slider" id="slider2"></div></div>
  <div class="sliderwrapper"><div class="slider" id="slider3"></div></div>
  <div class="sliderwrapper"><div class="slider" id="slider4"></div></div>
  <div id="calculation"></div>

<script src="d3.html"></script>
<script src="d3.slider.js"></script>
<script>

var margin = {top: 20, right: 400, bottom: 30, left: 90},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(7,"$");

var svg = d3.select("#graph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.csv("OtherLights.csv", type, function(error, data) {
  if (error) throw error;


  x.domain(data.map(function(d) { return d["Company"]; }));
  y.domain([0, Math.ceil(d3.max(data, function(d) { return d["cost"]; })/10000)*10000 ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 4)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Cost of 1,000 70-Watt Street Lights Per Year");

  svg.selectAll("rect")
      .data(data)
    .enter().append("rect")
      .attr("class", function(d){ 
        if( d["led or sodium"]=="LED" ){
          return "bar"; 
        }
        else{
          return "bar2"; 
        }
      })
      .attr("x", function(d) { return x(d["Company"]); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.cost); })
      .attr("height", function(d) { return height - y(d.cost); });
});

function type(d) {
  d.cost = +d.cost;
  return d;
}





    var energy_saved = .6;
    var maintenance_saved = .625;
    var price_of_equipment = 219;
    var lifespan = 30;

    var updatecost = function(){ 
      var cost = (((294*.1216)*(1-energy_saved)) + ((1 - maintenance_saved)*82) + (price_of_equipment/lifespan))*1000*1.07;
      d3.select("#calculation").text( cost );
      d3.select( "#graph svg g rect:nth-child(5)" )
        .attr( "height",height-y( cost ) )
        .attr( "y",y( cost ) )
      ;
      return cost; 
    };

    d3.select('#slider1').call( //energy_consumption
      d3.slider()
        .axis( d3.svg.axis()
          .orient("right")
          .ticks(3)
          .tickFormat( d3.format("%") )
        )
        .min(.8).max(.4)
        .value(energy_saved)
        .orientation("vertical")
        .on( "slide",function(e,v){
          energy_saved = v;
          updatecost();
        } )
    );

    d3.select('#slider2').call( //maintenance
      d3.slider()
        .axis( d3.svg.axis()
          .orient("right")
          .ticks(3)
          .tickFormat(d3.format("%"))
        )
        .min(.75).max(.5)
        .value(maintenance_saved)
        .orientation("vertical")
        .on( "slide",function(e,v){
          maintenance_saved = v;
          updatecost();
        } )
    );

    d3.select('#slider3').call( //lifespan
      d3.slider()
        .axis( d3.svg.axis()
          .orient("right")
          .ticks(3)
        )
        .min(40).max(20)
        .orientation("vertical")
        .value(lifespan)
        .on( "slide",function(e,v){
          lifespan = v;
          updatecost();
        } )
    );


    //flip the axis
    [ "#slider1","#slider2","#slider3"].map( function(d,i){
      var thisslider = d3.select(d);
      var thing = thisslider.selectAll(".tick")[0].map( function(tick){
        num = tick.getAttribute( "transform" ).split(",")[1].replace( ")","" )
        return "translate(0,"+(250-num)+")"
      } );
      thisslider.selectAll(".tick")
        .attr( "transform",function(d,i){ return thing[i]; } )
    })

</script>
